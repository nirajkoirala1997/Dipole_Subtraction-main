#include "ampvveval.h"

// auxiliary functions to split up the code into compiler friendly small pieces
void ampvv01(numtype a[]);
void ampvv02(numtype a[]);
void ampvv03(numtype a[]);
void ampvv04(numtype a[]);
void ampvv05(numtype a[]);
void ampvv06(numtype a[]);
void ampvv07(numtype a[]);
void ampvv08(numtype a[]);
void ampvv09(numtype a[]);
void ampvv10(numtype a[]);
void ampvv11(numtype a[]);
void ampvv12(numtype a[]);
void ampvv13(numtype a[]);
void ampvv14(numtype a[]);
void ampvv15(numtype a[]);
void ampvv16(numtype a[]);
void ampvv17(numtype a[]);
void ampvv18(numtype a[]);
void ampvv19(numtype a[]);
void ampvv20(numtype a[]);
void ampvv21(numtype a[]);
void ampvv22(numtype a[]);
void ampvv23(numtype a[]);
void ampvv24(numtype a[]);
void ampvv25(numtype a[]);
void ampvv26(numtype a[]);
void ampvv27(numtype a[]);
void ampvv28(numtype a[]);
void ampvv29(numtype a[]);
void ampvv30(numtype a[]);
void ampvv31(numtype a[]);
void ampvv32(numtype a[]);
void ampvv33(numtype a[]);
void ampvv34(numtype a[]);
void ampvv35(numtype a[]);
void ampvv36(numtype a[]);
void ampvv37(numtype a[]);
void ampvv38(numtype a[]);
void ampvv39(numtype a[]);
void ampvv40(numtype a[]);
void ampvv41(numtype a[]);
void ampvv42(numtype a[]);
void ampvv43(numtype a[]);
void ampvv44(numtype a[]);
void ampvv45(numtype a[]);
void ampvv46(numtype a[]);
void ampvv47(numtype a[]);
void ampvv48(numtype a[]);
void ampvv49(numtype a[]);
void ampvv50(numtype a[]);
void ampvv51(numtype a[]);
void ampvv52(numtype a[]);
void ampvv53(numtype a[]);
void ampvv54(numtype a[]);
void ampvv55(numtype a[]);
void ampvv56(numtype a[]);
void ampvv57(numtype a[]);
void ampvv58(numtype a[]);
void ampvv59(numtype a[]);
void ampvv60(numtype a[]);
void ampvv61(numtype a[]);
void ampvv62(numtype a[]);
void ampvv63(numtype a[]);
void ampvv64(numtype a[]);
void ampvv65(numtype a[]);
void ampvv66(numtype a[]);
void ampvv67(numtype a[]);
void ampvv68(numtype a[]);
void ampvv69(numtype a[]);
void ampvv70(numtype a[]);
void ampvv71(numtype a[]);
void ampvv72(numtype a[]);
void ampvv73(numtype a[]);
void ampvv74(numtype a[]);
void ampvv75(numtype a[]);
void ampvv76(numtype a[]);
void ampvv77(numtype a[]);
void ampvv78(numtype a[]);
void ampvv79(numtype a[]);
void ampvv80(numtype a[]);
void ampvv81(numtype a[]);
void ampvv82(numtype a[]);
void ampvv83(numtype a[]);
void ampvv84(numtype a[]);
void ampvv85(numtype a[]);
void ampvv86(numtype a[]);
void ampvv87(numtype a[]);
void ampvv88(numtype a[]);
void ampvv89(numtype a[]);
void ampvv90(numtype a[]);
void ampvv91(numtype a[]);
void ampvv92(numtype a[]);
void ampvv93(numtype a[]);

// the main function
void ampvv(double sn, double un,
	   double& m0m0fin_N, double& m0m1fin_CF_N, double& m1m1fin_CF2_N,
	   double& m0m2fin_CF_N_Nf, double& m0m2fin_CF_N_NfZ2,
	   double& m0m2fin_CF2_N, double& m0m2fin_CF)
{
#ifdef DIGITS
  GiNaC::Digits=DIGITS;
#endif
  if (sn < 4)
    throw runtime_error("illegal s value");
  ex b = sqrt(1 - 4/ex(sn));
  numtype x = tonn((1 - b)/(1 + b));
  numtype z = -un;
  if (z < x || z > 1/x)
    throw runtime_error("illegal (s,u) combination");
  numtype y = (1 + x*x - x*z)/x;
  numtype Z = z + 1;
  numtype Y = y + 1;

   

numtype a[9286];

a[1] = nn(1)+x+x*x+nn(-1)*x*z;
a[2] = nn(1)+x*x+nn(-1)*x*z;
a[3] = nn(1)+nn(-1)*x*z;
a[4] = nn(-1)*x+z;
a[5] = nn(1)+nn(-1)*x*y;
a[6] = nn(-1)*x+y;
a[7] = nn(1)+z;
a[8] = nn(1)+y;
a[9] = nn(1)+nn(-1)*x;
a[10] = nn(1)+x;
a[11] = Y+Z;
a[12] = Y;
a[13] = Z;
a[14] = x;
a[15] = z;
a[16] = y;
ampvv01(a);
ampvv02(a);
ampvv03(a);
ampvv04(a);
ampvv05(a);
ampvv06(a);
ampvv07(a);
ampvv08(a);
ampvv09(a);
ampvv10(a);
ampvv11(a);
ampvv12(a);
ampvv13(a);
ampvv14(a);
ampvv15(a);
ampvv16(a);
ampvv17(a);
ampvv18(a);
ampvv19(a);
ampvv20(a);
ampvv21(a);
ampvv22(a);
ampvv23(a);
ampvv24(a);
ampvv25(a);
ampvv26(a);
ampvv27(a);
ampvv28(a);
ampvv29(a);
ampvv30(a);
ampvv31(a);
ampvv32(a);
ampvv33(a);
ampvv34(a);
ampvv35(a);
ampvv36(a);
ampvv37(a);
ampvv38(a);
ampvv39(a);
ampvv40(a);
ampvv41(a);
ampvv42(a);
ampvv43(a);
ampvv44(a);
ampvv45(a);
ampvv46(a);
ampvv47(a);
ampvv48(a);
ampvv49(a);
ampvv50(a);
ampvv51(a);
ampvv52(a);
ampvv53(a);
ampvv54(a);
ampvv55(a);
ampvv56(a);
ampvv57(a);
ampvv58(a);
ampvv59(a);
ampvv60(a);
ampvv61(a);
ampvv62(a);
ampvv63(a);
ampvv64(a);
ampvv65(a);
ampvv66(a);
ampvv67(a);
ampvv68(a);
ampvv69(a);
ampvv70(a);
ampvv71(a);
ampvv72(a);
ampvv73(a);
ampvv74(a);
ampvv75(a);
ampvv76(a);
ampvv77(a);
ampvv78(a);
ampvv79(a);
ampvv80(a);
ampvv81(a);
ampvv82(a);
ampvv83(a);
ampvv84(a);
ampvv85(a);
ampvv86(a);
ampvv87(a);
ampvv88(a);
ampvv89(a);
ampvv90(a);
ampvv91(a);
ampvv92(a);
ampvv93(a);
m0m0fin_N = todouble(a[9279]);
m0m1fin_CF_N = todouble(a[9280]);
m1m1fin_CF2_N = todouble(a[9285]);
m0m2fin_CF_N_Nf = todouble(a[9281]);
m0m2fin_CF2_N = todouble(a[9284]);
m0m2fin_CF_N_NfZ2 = todouble(a[9283]);
m0m2fin_CF = todouble(a[9282]);
}

